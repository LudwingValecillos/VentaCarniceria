import { getFirestore, doc, getDoc, collection, getDocs } from 'firebase/firestore';
import { app } from './firebase';

const db = getFirestore(app);

// Configuraci√≥n por defecto (fallback)
const DEFAULT_CONFIG = {
  // Informaci√≥n b√°sica de la carnicer√≠a
  name: "Daniele Carniceria",
  tagline: "Los mejores cortes de carne fresca y de alta calidad",
  description: "M√°s de 20 a√±os ofreciendo los mejores cortes de carne fresca y de alta calidad para tu hogar.",
  logoUrl: "",
  bannerUrl: "",
  primaryColor: "#D32F2F",
  secondaryColor: "#FFCDD2",
  
  // Informaci√≥n de contacto
  contact: {
    phone: "11 2192-6239",
    whatsapp: "91121926239",
    location: "Buenos Aires, Argentina",
    delivery: "Env√≠os gratis a toda la zona",
  },
  
  // Redes sociales
  social: {
    instagram: {
      url: "https://www.instagram.com/lodenachocarniceria/",
      username: "@lodenachocarniceria"
    },
    facebook: {
      url: "https://www.facebook.com/share/196s7xmSpP/",
      username: "Carnicer√≠a Lo De Nacho"
    },
    whatsapp: {
      url: "https://wa.me/91121926239", 
      message: "Hola, me gustar√≠a hacer un pedido."
    }
  },
  
  // Horarios de atenci√≥n
  schedules: "Lunes a S√°bado: 9:00 - 13:00 y 17:00 - 21:00 | Domingos: 9:00 - 13:00",
};

// Interfaz para la configuraci√≥n din√°mica
interface DynamicConfig {
  name: string;
  logoUrl: string;
  bannerUrl: string;
  primaryColor: string;
  secondaryColor: string;
  schedules: string;
  tagline: string;
  description: string;
  contact: {
    phone: string;
    whatsapp: string;
    location: string;
    delivery: string;
  };
  social: {
    instagram: { url: string; username: string };
    facebook: { url: string; username: string };
    whatsapp: { url: string; message: string };
  };
}

// Configuraci√≥n din√°mica que se carga desde Firebase
let DYNAMIC_CONFIG: DynamicConfig = { ...DEFAULT_CONFIG };

// Funci√≥n para obtener la URL de b√∫squeda
const getSearchUrl = (): string => {
  let searchUrl = window.location.origin;
  if (searchUrl.includes('localhost') || searchUrl.includes('127.0.0.1')) {
    searchUrl = 'https://voluble-squirrel-a30bd3.netlify.app';
  }
  return searchUrl;
};

// Funci√≥n para actualizar el favicon y t√≠tulo din√°micamente
const updateFaviconAndTitle = (logoUrl: string, name: string): void => {
  try {
    // Actualizar favicon
    let favicon = document.querySelector('link[rel="icon"]') as HTMLLinkElement;
    
    if (!favicon) {
      // Si no existe, crear uno nuevo
      favicon = document.createElement('link');
      favicon.rel = 'icon';
      document.head.appendChild(favicon);
    }
    
    // Actualizar la URL del favicon
    favicon.href = logoUrl;
    
    // Tambi√©n actualizar apple-touch-icon si existe
    const appleTouchIcon = document.querySelector('link[rel="apple-touch-icon"]') as HTMLLinkElement;
    if (appleTouchIcon) {
      appleTouchIcon.href = logoUrl;
    }
    
    // Actualizar t√≠tulo de la p√°gina
    document.title = `${name} - Los mejores cortes de carne fresca`;
    
    console.log('üéØ Favicon actualizado:', logoUrl);
    console.log('üìÑ T√≠tulo actualizado:', document.title);
  } catch (error) {
    console.error('‚ùå Error al actualizar favicon/t√≠tulo:', error);
  }
};

// Funci√≥n para cargar la configuraci√≥n desde Firebase
export const loadStoreConfig = async (): Promise<void> => {
  try {
    const searchUrl = getSearchUrl();
    console.log('üîç Buscando configuraci√≥n para URL:', searchUrl);
    
    // Buscar la carnicer√≠a por URL
    const butcheriesRef = collection(db, 'butcheries');
    const butcheriesSnapshot = await getDocs(butcheriesRef);
    
    let butcheryData: any = null; // eslint-disable-line @typescript-eslint/no-explicit-any
    butcheriesSnapshot.forEach((doc) => {
      const data = doc.data();
      if (data.url === searchUrl) {
        butcheryData = { id: doc.id, ...data };
      }
    });
    
    // Si no encuentra por URL, usar 'demo' como fallback
    if (!butcheryData) {
      console.log('üìÑ No se encontr√≥ por URL, usando carnicer√≠a demo');
      const demoDocRef = doc(db, 'butcheries', 'demo');
      const demoDoc = await getDoc(demoDocRef);
      if (demoDoc.exists()) {
        butcheryData = { id: 'demo', ...demoDoc.data() };
      }
    }
    
    if (butcheryData) {
      console.log('‚úÖ Configuraci√≥n cargada:', butcheryData);
      console.log('üì± Instagram URL:', butcheryData.instagram);
      console.log('üìò Facebook URL:', butcheryData.facebook);
      console.log('üìû WhatsApp:', butcheryData.whatsappNumber);
      
      // Actualizar configuraci√≥n din√°mica
      DYNAMIC_CONFIG = {
        ...DEFAULT_CONFIG,
        name: butcheryData.name || DEFAULT_CONFIG.name,
        logoUrl: butcheryData.logoUrl || "",
        bannerUrl: butcheryData.bannerUrl || "",
        primaryColor: butcheryData.primaryColor || DEFAULT_CONFIG.primaryColor,
        secondaryColor: butcheryData.secondaryColor || DEFAULT_CONFIG.secondaryColor,
        schedules: butcheryData.schedules || DEFAULT_CONFIG.schedules,
        contact: {
          ...DEFAULT_CONFIG.contact,
          whatsapp: butcheryData.whatsappNumber?.replace('+', '') || DEFAULT_CONFIG.contact.whatsapp,
        },
        social: {
          instagram: {
            url: butcheryData.instagram || DEFAULT_CONFIG.social.instagram.url,
            username: butcheryData.instagramUsername || 
                     (butcheryData.instagram ? `@${butcheryData.instagram.split('/').pop()}` : DEFAULT_CONFIG.social.instagram.username)
          },
          facebook: {
            url: butcheryData.facebook || DEFAULT_CONFIG.social.facebook.url,
            username: butcheryData.facebookUsername || butcheryData.name || DEFAULT_CONFIG.social.facebook.username
          },
          whatsapp: {
            url: butcheryData.whatsappNumber ? `https://wa.me/${butcheryData.whatsappNumber.replace('+', '')}` : DEFAULT_CONFIG.social.whatsapp.url,
            message: "Hola, me gustar√≠a hacer un pedido."
          }
        }
      };
      
      // Actualizar favicon y t√≠tulo si hay logoUrl
      if (butcheryData.logoUrl) {
        updateFaviconAndTitle(butcheryData.logoUrl, butcheryData.name || DEFAULT_CONFIG.name);
      } else if (butcheryData.name) {
        // Solo actualizar t√≠tulo si no hay logo
        document.title = `${butcheryData.name} - Los mejores cortes de carne fresca`;
      }
    }
  } catch (error) {
    console.error('‚ùå Error al cargar configuraci√≥n:', error);
  }
};

// Configuraci√≥n exportada que se actualiza din√°micamente
export const STORE_CONFIG = {
  get name() { return DYNAMIC_CONFIG.name; },
  get logoUrl() { return DYNAMIC_CONFIG.logoUrl; },
  get bannerUrl() { return DYNAMIC_CONFIG.bannerUrl; },
  get primaryColor() { return DYNAMIC_CONFIG.primaryColor; },
  get secondaryColor() { return DYNAMIC_CONFIG.secondaryColor; },
  get schedules() { return DYNAMIC_CONFIG.schedules; },
  get tagline() { return DYNAMIC_CONFIG.tagline; },
  get description() { return DYNAMIC_CONFIG.description; },
  get contact() { return DYNAMIC_CONFIG.contact; },
  get social() { return DYNAMIC_CONFIG.social; },
  
  // Configuraci√≥n del carrito (est√°tica)
  cart: {
    defaultQuantity: 1,
    quantityStep: 0.5,
    currency: "ARS",
    currencySymbol: "$",
    deliveryMessage: "Env√≠os gratis a toda la zona"
  },
  
  // Mensajes del sistema
  messages: {
    loading: {
      title: "Cargando productos frescos...",
      subtitle: "Estamos preparando los mejores cortes para vos"
    },
    emptyCart: {
      title: "Tu carrito est√° vac√≠o",
      subtitle: "¬°Agrega algunos productos deliciosos de nuestra carnicer√≠a!",
      button: "Explorar productos"
    },
    noProducts: {
      title: "No encontramos productos",
      subtitle: "Intenta buscar con otras palabras o explora nuestras categor√≠as",
      button: "Ver todos los productos"
    },
    offers: {
      title: "¬°Ofertas Especiales! üî•",
      subtitle: "Los mejores cortes al mejor precio",
      button: "Ver todas las ofertas"
    },
    error: {
      title: "Oops! Algo sali√≥ mal",
      subtitle: "Error al cargar los productos"
    }
  },
  
  // Configuraci√≥n de categor√≠as
  categories: [
    { name: 'Todos', icon: 'üõí', key: 'todos' },
    { name: 'Ofertas', icon: 'üî•', key: 'ofertas', isHot: true },
    { name: 'Vacuno', icon: 'ü•©', key: 'vacuno' },
    { name: 'Cerdo', icon: 'ü•ì', key: 'cerdo' },
    { name: 'Pollo', icon: 'üçó', key: 'pollo' },
    { name: 'Embutidos', icon: 'üå≠', key: 'embutidos' },
    { name: 'Anchuras', icon: 'ü•ò', key: 'anchuras' },
    { name: 'Fiambres', icon: 'üçñ', key: 'fiambres' },
    { name: 'Congelados', icon: 'üßä', key: 'congelados' },
    { name: 'Carbon', icon: 'üî•', key: 'carbon' },
    { name: 'Bebidas', icon: 'ü•§', key: 'bebidas' },
  ],
  
  // Configuraci√≥n de m√©todos de pago
  paymentMethods: [
    { 
      value: 'efectivo', 
      label: 'Efectivo', 
      desc: 'Pago al recibir',
      icon: 'üíµ'
    },
    { 
      value: 'tarjeta', 
      label: 'Tarjeta', 
      desc: 'D√©bito/Cr√©dito',
      icon: 'üí≥'
    },
    { 
      value: 'transferencia', 
      label: 'Transferencia', 
      desc: 'Bancaria',
      icon: 'üè¶'
    },
    { 
      value: 'mercadopago', 
      label: 'MercadoPago', 
      desc: 'Digital',
      icon: 'üì±'
    }
  ],
  
  // Configuraci√≥n de SEO y meta
  seo: {
    title: "Carnicer√≠a Lo De Nacho - Los mejores cortes de carne fresca",
    description: "Carnicer√≠a Lo De Nacho. M√°s de 20 a√±os ofreciendo los mejores cortes de carne fresca y de alta calidad. Env√≠os gratis a toda la zona.",
    keywords: "carnicer√≠a, carne fresca, vacuno, cerdo, pollo, embutidos, Buenos Aires, env√≠os gratis"
  }
};

// Funci√≥n helper para formatear precios
export const formatPrice = (price: number | string): string => {
  const numPrice = typeof price === 'string' ? parseFloat(price) : price;
  return numPrice.toLocaleString("es-AR", {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2,
  });
};

// Funci√≥n helper para capitalizar texto
export const capitalizeFirstLetter = (string: string): string => {
  return string.charAt(0).toUpperCase() + string.slice(1);
};

// Funci√≥n helper para obtener el a√±o actual
export const getCurrentYear = (): number => {
  return new Date().getFullYear();
}; 